env = require('test_run')
---
...
test_run = env.new()
---
...
engine = test_run:get_cfg('engine')
---
...
net_box = require('net.box')
---
...
errinj = box.error.injection
---
...
box.schema.user.grant('guest', 'replication')
---
...
replica_set = require('fast_replica')
---
...
replica_set.join(test_run, 'catch', 1, 'replica_timeout')
---
...
box.cfg({replication_timeout = 0.1})
---
...
test_run:cmd("switch catch")
---
- true
...
test_run:cmd("switch default")
---
- true
...
s = box.schema.space.create('test', {engine = engine});
---
...
-- Vinyl does not support hash index.
index = s:create_index('primary', {type = (engine == 'vinyl' and 'tree' or 'hash') })
---
...
test_run:cmd("switch catch")
---
- true
...
fiber = require('fiber')
---
...
while box.space.test == nil do fiber.sleep(0.01) end
---
...
test_run:cmd("switch default")
---
- true
...
test_run:cmd("stop server catch")
---
- true
...
-- Insert values on the master while replica is stopped and can't
-- fetch them.
errinj.set('ERRINJ_RELAY_SEND_DELAY', true)
---
- ok
...
for i = 1, 100 do s:insert{i, 'this is test message12345'} end
---
...
test_run:cmd("start server catch with args='0.01'")
---
- true
...
test_run:cmd("switch catch")
---
- true
...
-- Check that replica doesn't enter read-write mode before
-- catching up with the master: to check that we stop sending
-- rows on the master in relay_send function and attempt a data
-- modifying statement in replica while it's still fetching data
-- from the master.
--
-- In the next two cases we try to replace a tuple while replica
-- is catching up with the master (local replace, remote replace)
-- case.
--
-- Case #1: replace tuple on replica locally.
--
box.space.test ~= nil
---
- true
...
box.space.test:replace{1}
---
- error: Can't modify data because this instance is in read-only mode.
...
-- Case #2: replace tuple on replica by net.box.
test_run:cmd("switch default")
---
- true
...
test_run:cmd("set variable r_uri to 'catch.listen'")
---
- true
...
c = net_box.connect(r_uri)
---
...
d = c.space.test:replace{1}
---
- error: Can't modify data because this instance is in read-only mode.
...
-- Resume replication.
errinj.set('ERRINJ_RELAY_SEND_DELAY', false)
---
- ok
...
-- Cleanup.
test_run:drop_cluster({'catch'})
---
...
test_run:cleanup_cluster()
---
...
box.space.test:drop()
---
...
box.schema.user.revoke('guest', 'replication')
---
...
